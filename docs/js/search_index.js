var search_data = {"index":{"searchIndex":["barassociation","object","quxassociation","sleeperrb","badrequest","client","notfound","ratelimitexceeded","resources","avatar","draft","metadata","pick","metadata","settings","league","matchup","roster","settings","scoringsettings","settings","nflstate","player","playerarray","tradedpick","tradedpickarray","user","metadata","userarray","servererror","utilities","arrayproxy","cache","classmethods","request","rosterposition","==()","all()","avatar()","avatar()","avatar()","cached_association()","cached_attr()","cached_attrs()","call()","call()","current_roster()","draft()","draft()","draft_picks()","drafts()","drafts()","fantasy_positions()","full_name()","full_size()","half_ppr?()","hovered_player()","included()","league()","league()","league()","leagues()","matchups()","metadata()","metadata()","metadata()","new()","new()","new()","new()","new()","new()","nfl_state()","nominated_player()","nominating_user()","offering_user()","original_roster()","owner()","player()","player_hashes()","players()","players()","players()","position()","position()","ppr?()","previous_roster()","record_string()","refresh()","refresh()","reserve()","roster()","roster()","roster_positions()","rosters()","scoring_settings()","settings()","settings()","settings()","skip_refresh()","skip_refresh_fields()","standard?()","starters()","starters()","thumbnail()","total_points()","total_points_against()","traded_picks()","traded_picks()","user()","user()","users()","where()","win_pct()","changelog","code_of_conduct","gemfile","gemfile.lock","license","readme","rakefile","setup","application.css","application.js","index.html","draft_picks_response.json","draft_response.json","drafts_response.json","leagues_response.json","matchups_response.json","player_response.json","rosters_response.json","traded_picks_response.json","user_response.json","users_response.json"],"longSearchIndex":["barassociation","object","quxassociation","sleeperrb","sleeperrb::badrequest","sleeperrb::client","sleeperrb::notfound","sleeperrb::ratelimitexceeded","sleeperrb::resources","sleeperrb::resources::avatar","sleeperrb::resources::draft","sleeperrb::resources::draft::metadata","sleeperrb::resources::draft::pick","sleeperrb::resources::draft::pick::metadata","sleeperrb::resources::draft::settings","sleeperrb::resources::league","sleeperrb::resources::league::matchup","sleeperrb::resources::league::roster","sleeperrb::resources::league::roster::settings","sleeperrb::resources::league::scoringsettings","sleeperrb::resources::league::settings","sleeperrb::resources::nflstate","sleeperrb::resources::player","sleeperrb::resources::playerarray","sleeperrb::resources::tradedpick","sleeperrb::resources::tradedpickarray","sleeperrb::resources::user","sleeperrb::resources::user::metadata","sleeperrb::resources::userarray","sleeperrb::servererror","sleeperrb::utilities","sleeperrb::utilities::arrayproxy","sleeperrb::utilities::cache","sleeperrb::utilities::cache::classmethods","sleeperrb::utilities::request","sleeperrb::utilities::rosterposition","sleeperrb::utilities::rosterposition#==()","sleeperrb::resources::player::all()","sleeperrb::client#avatar()","sleeperrb::resources::league#avatar()","sleeperrb::resources::user#avatar()","sleeperrb::utilities::cache::classmethods#cached_association()","sleeperrb::utilities::cache::classmethods#cached_attr()","sleeperrb::utilities::cache::classmethods#cached_attrs()","barassociation::call()","quxassociation::call()","sleeperrb::resources::tradedpick#current_roster()","sleeperrb::client#draft()","sleeperrb::resources::draft::pick#draft()","sleeperrb::resources::draft#draft_picks()","sleeperrb::resources::league#drafts()","sleeperrb::resources::user#drafts()","sleeperrb::resources::player#fantasy_positions()","sleeperrb::resources::draft::pick::metadata#full_name()","sleeperrb::resources::avatar#full_size()","sleeperrb::resources::league::scoringsettings#half_ppr?()","sleeperrb::resources::draft::metadata#hovered_player()","sleeperrb::utilities::cache::included()","sleeperrb::client#league()","sleeperrb::resources::league::matchup#league()","sleeperrb::resources::league::roster#league()","sleeperrb::resources::user#leagues()","sleeperrb::resources::league#matchups()","sleeperrb::resources::draft#metadata()","sleeperrb::resources::draft::pick#metadata()","sleeperrb::resources::user#metadata()","object::new()","sleeperrb::resources::league::new()","sleeperrb::resources::league::scoringsettings::new()","sleeperrb::resources::user::new()","sleeperrb::utilities::cache::new()","sleeperrb::utilities::rosterposition::new()","sleeperrb::client#nfl_state()","sleeperrb::resources::draft::metadata#nominated_player()","sleeperrb::resources::draft::metadata#nominating_user()","sleeperrb::resources::draft::metadata#offering_user()","sleeperrb::resources::tradedpick#original_roster()","sleeperrb::resources::league::roster#owner()","sleeperrb::resources::draft::pick#player()","sleeperrb::resources::player::player_hashes()","sleeperrb::client#players()","sleeperrb::resources::league::matchup#players()","sleeperrb::resources::league::roster#players()","sleeperrb::resources::draft::pick::metadata#position()","sleeperrb::resources::player#position()","sleeperrb::resources::league::scoringsettings#ppr?()","sleeperrb::resources::tradedpick#previous_roster()","sleeperrb::resources::league::roster::settings#record_string()","sleeperrb::resources::player::refresh()","sleeperrb::utilities::cache#refresh()","sleeperrb::resources::league::roster#reserve()","sleeperrb::resources::draft::pick#roster()","sleeperrb::resources::league::matchup#roster()","sleeperrb::resources::league#roster_positions()","sleeperrb::resources::league#rosters()","sleeperrb::resources::league#scoring_settings()","sleeperrb::resources::draft#settings()","sleeperrb::resources::league#settings()","sleeperrb::resources::league::roster#settings()","sleeperrb::utilities::cache::classmethods#skip_refresh()","sleeperrb::utilities::cache::classmethods#skip_refresh_fields()","sleeperrb::resources::league::scoringsettings#standard?()","sleeperrb::resources::league::matchup#starters()","sleeperrb::resources::league::roster#starters()","sleeperrb::resources::avatar#thumbnail()","sleeperrb::resources::league::roster::settings#total_points()","sleeperrb::resources::league::roster::settings#total_points_against()","sleeperrb::resources::draft#traded_picks()","sleeperrb::resources::league#traded_picks()","sleeperrb::client#user()","sleeperrb::resources::draft::pick#user()","sleeperrb::resources::league#users()","sleeperrb::utilities::arrayproxy#where()","sleeperrb::resources::league::roster::settings#win_pct()","","","","","","","","","","","","","","","","","","","","",""],"info":[["BarAssociation","","BarAssociation.html","",""],["Object","","Object.html","",""],["QuxAssociation","","QuxAssociation.html","",""],["SleeperRb","","SleeperRb.html","",""],["SleeperRb::BadRequest","","SleeperRb/BadRequest.html","",""],["SleeperRb::Client","","SleeperRb/Client.html","","<p>A SleeperRb::Client instance is the interface for formulating all requests for Sleeper data.\n"],["SleeperRb::NotFound","","SleeperRb/NotFound.html","",""],["SleeperRb::RateLimitExceeded","","SleeperRb/RateLimitExceeded.html","",""],["SleeperRb::Resources","","SleeperRb/Resources.html","",""],["SleeperRb::Resources::Avatar","","SleeperRb/Resources/Avatar.html","","<p>The Avatar class allows access to full-size or thumbnail URLs for user avatars.\n"],["SleeperRb::Resources::Draft","","SleeperRb/Resources/Draft.html","","<p>Represents a draft for a given user.\n"],["SleeperRb::Resources::Draft::Metadata","","SleeperRb/Resources/Draft/Metadata.html","","<p>Metadata about a particular Draft.\n"],["SleeperRb::Resources::Draft::Pick","","SleeperRb/Resources/Draft/Pick.html","","<p>A pick from a given draft, containing information about the user and selected player.\n"],["SleeperRb::Resources::Draft::Pick::Metadata","","SleeperRb/Resources/Draft/Pick/Metadata.html","","<p>Metadata associated with a specific draft pick.\n"],["SleeperRb::Resources::Draft::Settings","","SleeperRb/Resources/Draft/Settings.html","","<p>Settings for a given Draft.\n"],["SleeperRb::Resources::League","","SleeperRb/Resources/League.html","","<p>This class represents a Fantasy Football League and is the access point for associated resources. All …\n"],["SleeperRb::Resources::League::Matchup","","SleeperRb/Resources/League/Matchup.html","","<p>Represents a matchup for a specific team in a specific week. Two records with the same matchup_id are …\n"],["SleeperRb::Resources::League::Roster","","SleeperRb/Resources/League/Roster.html","","<p>A roster belonging to a specific user in a specific league.\n"],["SleeperRb::Resources::League::Roster::Settings","","SleeperRb/Resources/League/Roster/Settings.html","","<p>Settings for a specific roster in a league, including W/L/D, scoring_data, and waiver info.\n"],["SleeperRb::Resources::League::ScoringSettings","","SleeperRb/Resources/League/ScoringSettings.html","","<p>Scoring settings for a League instance\n"],["SleeperRb::Resources::League::Settings","","SleeperRb/Resources/League/Settings.html","","<p>Non-scoring settings for a League instance\n"],["SleeperRb::Resources::NflState","","SleeperRb/Resources/NflState.html","","<p>The NflState resource represents the current state of the NFL (week number, year, etc) as defined by …\n"],["SleeperRb::Resources::Player","","SleeperRb/Resources/Player.html","","<p>A specific NFL player with general information about roster position, physical attributes, team, etc. …\n"],["SleeperRb::Resources::PlayerArray","","SleeperRb/Resources/PlayerArray.html","","<p>Provides methods named for each of SleeperRb::Utilities::RosterPosition::VALID_ROSTER_POSITIONS which …\n"],["SleeperRb::Resources::TradedPick","","SleeperRb/Resources/TradedPick.html","","<p>Represents a traded draft pick for any season of the League.\n"],["SleeperRb::Resources::TradedPickArray","","SleeperRb/Resources/TradedPickArray.html","",""],["SleeperRb::Resources::User","","SleeperRb/Resources/User.html","","<p>The User resource represents a single user in Sleeper. This also serves as the access points for associated …\n"],["SleeperRb::Resources::User::Metadata","","SleeperRb/Resources/User/Metadata.html","","<p>Metadata exists only when the User object was retrieved from a league. Includes team_name for that league. …\n"],["SleeperRb::Resources::UserArray","","SleeperRb/Resources/UserArray.html","",""],["SleeperRb::ServerError","","SleeperRb/ServerError.html","",""],["SleeperRb::Utilities","","SleeperRb/Utilities.html","",""],["SleeperRb::Utilities::ArrayProxy","","SleeperRb/Utilities/ArrayProxy.html","","<p>A wrapper for arrays of various SleeperRb::Resources that implements a light ActiveRecord-inspired syntax. …\n"],["SleeperRb::Utilities::Cache","","SleeperRb/Utilities/Cache.html","","<p>This module encapsulates the logic for caching and refreshing values retrieved from the Sleeper API. …\n"],["SleeperRb::Utilities::Cache::ClassMethods","","SleeperRb/Utilities/Cache/ClassMethods.html","","<p>Methods to be extended into the class when included.\n"],["SleeperRb::Utilities::Request","","SleeperRb/Utilities/Request.html","","<p>This module encapsulates the logic for handling the response when querying from the Sleeper API.\n"],["SleeperRb::Utilities::RosterPosition","","SleeperRb/Utilities/RosterPosition.html","","<p>A string representing a roster position. See VALID_ROSTER_POSITIONS. For every possible position in  …\n"],["==","SleeperRb::Utilities::RosterPosition","SleeperRb/Utilities/RosterPosition.html#method-i-3D-3D","(other)",""],["all","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-all","()","<p>Ensuring there is one source of players so the heavy endpoint need not be called frequently.\n<p>@return [ …\n"],["avatar","SleeperRb::Client","SleeperRb/Client.html#method-i-avatar","(avatar_id)","<p>Returns an avatar found by the alphanumeric ID.\n<p>@param avatar_id [String] The ID for the avatar\n<p>@return …\n"],["avatar","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-avatar","","<p>Retrieves the Avatar instance for the league.\n<p>@return [SleeperRb::Resources::Avatar]\n"],["avatar","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-avatar","","<p>@return [SleeperRb::Resources::Avatar]\n"],["cached_association","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-cached_association","(name, &block)","<p>Creates a memoized association that returns another resource.\n"],["cached_attr","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-cached_attr","(*attrs)","<p>Creates a memoized attribute reader for the named attributes.\n<p>Example\n<p>+cached_attr :display_name, :username, …\n"],["cached_attrs","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-cached_attrs","()","<p>The stored mapping of cached attribute names to their translator functions.\n"],["call","BarAssociation","BarAssociation.html#method-c-call","()",""],["call","QuxAssociation","QuxAssociation.html#method-c-call","(num)",""],["current_roster","SleeperRb::Resources::TradedPick","SleeperRb/Resources/TradedPick.html#method-i-current_roster","","<p>The roster which currently owns this pick.\n<p>@return [:Resources::League::Roster]\n"],["draft","SleeperRb::Client","SleeperRb/Client.html#method-i-draft","(draft_id)","<p>Returns a specific Draft.\n<p>@return [SleeperRb::Resources::Draft]\n"],["draft","SleeperRb::Resources::Draft::Pick","SleeperRb/Resources/Draft/Pick.html#method-i-draft","","<p>Returns the draft instance to which this pick belongs.\n<p>@return [SleeperRb::Resources::Draft]\n"],["draft_picks","SleeperRb::Resources::Draft","SleeperRb/Resources/Draft.html#method-i-draft_picks","","<p>All picks in the Draft.\n<p>@return [Array&lt;SleeperRb::Resources::Draft::Pick&gt;]\n"],["drafts","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-drafts","","<p>Returns all drafts for the league\n<p>@return [Array&lt;SleeperRb::Resources::Draft&gt;]\n"],["drafts","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-drafts","","<p>Retrieves all drafts for the user for the given season\n<p>@param season_year [String] The year in which the …\n"],["fantasy_positions","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-i-fantasy_positions","","<p>All fantasy positions for which the player is eligible.\n<p>@return [Array&lt;SleeperRb::Utilities::RosterPosition …\n"],["full_name","SleeperRb::Resources::Draft::Pick::Metadata","SleeperRb/Resources/Draft/Pick/Metadata.html#method-i-full_name","()","<p>Returns the combined first and last name.\n<p>@return [String]\n"],["full_size","SleeperRb::Resources::Avatar","SleeperRb/Resources/Avatar.html#method-i-full_size","","<p>Returns the full size image for the Avatar\n<p>@return [Tempfile]\n"],["half_ppr?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-half_ppr-3F","()","<p>@return [Boolean] If league uses Half-PPR scoring\n"],["hovered_player","SleeperRb::Resources::Draft::Metadata","SleeperRb/Resources/Draft/Metadata.html#method-i-hovered_player","","<p>@return [SleeperRb::Resources::Player]\n"],["included","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-c-included","(base)","<p>Ensures that ClassMethods are extended into the base class when including.\n"],["league","SleeperRb::Client","SleeperRb/Client.html#method-i-league","(league_id)","<p>Returns a League found by the alphanumeric ID.\n<p>@param league_id [String] The ID for the League\n<p>@return …\n"],["league","SleeperRb::Resources::League::Matchup","SleeperRb/Resources/League/Matchup.html#method-i-league","","<p>@return [SleeperRb::Resources::League]\n"],["league","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-league","","<p>The league to which the roster belongs\n<p>@return [SleeperRb::Resources::League]\n"],["leagues","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-leagues","","<p>Retrieves leagues for the user for the given season.\n<p>@param season_year [String] The year in which the …\n"],["matchups","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-matchups","","<p>Returns matchups for the League for the given week.\n<p>@return [Array&lt;SleeperRb::Resources::League::Matchup …\n"],["metadata","SleeperRb::Resources::Draft","SleeperRb/Resources/Draft.html#method-i-metadata","","<p>Metadata for the draft.\n<p>@return [SleeperRb::Resources::Draft::Metadata]\n"],["metadata","SleeperRb::Resources::Draft::Pick","SleeperRb/Resources/Draft/Pick.html#method-i-metadata","","<p>Returns the metadata for this pick.\n<p>@return [SleeperRb::resources::Draft::Pick::Metadata]\n"],["metadata","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-metadata","","<p>@return [SleeperRb::Resources::User::Metadata]\n"],["new","Object","Object.html#method-c-new","(bar:, qux:)",""],["new","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-c-new","(opts = {})",""],["new","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-c-new","(opts)",""],["new","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-c-new","(opts)","<p>Initializes a user, with either username or user_id.\n<p>@param username [String] The current username\n<p>@param …\n"],["new","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-c-new","(opts = {})","<p>Sets up an object with values for any cached_attrs pre-initialized if provided.\n<p>@param opts [Hash] Key/value …\n"],["new","SleeperRb::Utilities::RosterPosition","SleeperRb/Utilities/RosterPosition.html#method-c-new","(position)",""],["nfl_state","SleeperRb::Client","SleeperRb/Client.html#method-i-nfl_state","()","<p>Returns the current NflState.\n<p>@return SleeperRb::Resources::NflState The NflState instance\n"],["nominated_player","SleeperRb::Resources::Draft::Metadata","SleeperRb/Resources/Draft/Metadata.html#method-i-nominated_player","","<p>The player who is currently nominated.\n<p>@return [SleeperRb::Resources::Player]\n"],["nominating_user","SleeperRb::Resources::Draft::Metadata","SleeperRb/Resources/Draft/Metadata.html#method-i-nominating_user","","<p>The user who has made the most recent nomination.\n<p>@return [SleeperRb::Resources::User]\n"],["offering_user","SleeperRb::Resources::Draft::Metadata","SleeperRb/Resources/Draft/Metadata.html#method-i-offering_user","","<p>The user who has made the most recent offer.\n<p>@return [SleeperRb::Resources::User]\n"],["original_roster","SleeperRb::Resources::TradedPick","SleeperRb/Resources/TradedPick.html#method-i-original_roster","","<p>The roster which originally owned this pick.\n<p>@return [:Resources::League::Roster]\n"],["owner","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-owner","","<p>@return [SleeperRb::Resources::User]\n"],["player","SleeperRb::Resources::Draft::Pick","SleeperRb/Resources/Draft/Pick.html#method-i-player","","<p>Returns the player instance selected with this pick.\n<p>@return [SleeperRb::Resources::Player]\n"],["player_hashes","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-player_hashes","()",""],["players","SleeperRb::Client","SleeperRb/Client.html#method-i-players","()","<p>Returns all NFL players.\n<p>@return [SleeperRb::Resources::PlayerArray]\n"],["players","SleeperRb::Resources::League::Matchup","SleeperRb/Resources/League/Matchup.html#method-i-players","","<p>All players on the roster for this matchup.\n<p>@return [SleeperRb::Resources::Player]\n"],["players","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-players","","<p>The players currently currently on the roster.\n<p>@return [SleeperRb::Resources::PlayerArray]\n"],["position","SleeperRb::Resources::Draft::Pick::Metadata","SleeperRb/Resources/Draft/Pick/Metadata.html#method-i-position","","<p>@return [SleeperRb::Utilities::RosterPosition]\n"],["position","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-i-position","","<p>Primary position for the player.\n<p>@return [SleeperRb::Utilities::RosterPosition]\n"],["ppr?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-ppr-3F","()","<p>@return [Boolean] If league uses PPR scoring\n"],["previous_roster","SleeperRb::Resources::TradedPick","SleeperRb/Resources/TradedPick.html#method-i-previous_roster","","<p>The last roster to have owned this pick before the current one (can be same as original_roster).\n<p>@return …\n"],["record_string","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-record_string","()","<p>@return [String] Record for the roster in W - L - T format\n"],["refresh","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-refresh","()","<p>Resets the values for all players.\n<p>@return [self]\n"],["refresh","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-i-refresh","()","<p>Refreshes all associations and memoized values set by cached_attr.\n<p>@return [self]\n"],["reserve","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-reserve","","<p>The players currently on the reserve for this roster.\n<p>@return [SleeperRb::Resources::PlayerArray]\n"],["roster","SleeperRb::Resources::Draft::Pick","SleeperRb/Resources/Draft/Pick.html#method-i-roster","","<p>Returns the roster instance to which this pick belongs.\n<p>@return [SleeperRb::Resources::League::Roster …\n"],["roster","SleeperRb::Resources::League::Matchup","SleeperRb/Resources/League/Matchup.html#method-i-roster","","<p>@return [SleeperRb::Resources::League::Roster]\n"],["roster_positions","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-roster_positions","","<p>Retrieves the available roster positions for the league.\n<p>@return [Array&lt;SleeperRb::Utilities::RosterPosition …\n"],["rosters","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-rosters","","<p>Retrieves rosters for the League.\n<p>@return [Array&lt;SleeperRb::Resources::League::Roster&gt;]\n"],["scoring_settings","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-scoring_settings","","<p>Retrieves the scoring settings for the league.\n<p>@return [SleeperRb::Resources::League::ScoringSettings …\n"],["settings","SleeperRb::Resources::Draft","SleeperRb/Resources/Draft.html#method-i-settings","","<p>Settings for the draft.\n<p>@return [SleeperRb::Resources::Draft::Settings]\n"],["settings","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-settings","","<p>Returns the non-scoring settings for the league.\n<p>@return [SleeperRb::Resources::League::Settings]\n"],["settings","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-settings","","<p>@return [SleeperRb::Resources::League::Roster::Settings]\n"],["skip_refresh","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-skip_refresh","(*fields)","<p>Takes in a list of fields which should be excluded from refresh. Use :all for models which do not have …\n"],["skip_refresh_fields","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-skip_refresh_fields","()","<p>The stored list of fields which should be excluded from refresh.\n"],["standard?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-standard-3F","()","<p>@return [Boolean] If league uses Standard (0 PPR) scoring\n"],["starters","SleeperRb::Resources::League::Matchup","SleeperRb/Resources/League/Matchup.html#method-i-starters","","<p>All players starting on the roster for this matchup.\n<p>@return [SleeperRb::Resources::Player]\n"],["starters","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-starters","","<p>The players currently starting for this roster.\n<p>@return [SleeperRb::Resources::PlayerArray]\n"],["thumbnail","SleeperRb::Resources::Avatar","SleeperRb/Resources/Avatar.html#method-i-thumbnail","","<p>Returns the full size image for the Avatar\n<p>@return [Tempfile]\n"],["total_points","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-total_points","()","<p>@return [Float] All points scored by the roster\n"],["total_points_against","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-total_points_against","()","<p>@return [Float] All points scored against the roster\n"],["traded_picks","SleeperRb::Resources::Draft","SleeperRb/Resources/Draft.html#method-i-traded_picks","","<p>All picks in the Draft that were traded.\n<p>@return [SleeperRb::Resources::TradedPickArray]\n"],["traded_picks","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-traded_picks","","<p>Returns all traded draft picks for the League.\n<p>@return [SleeperRb::Resources::TradedPickArray]\n"],["user","SleeperRb::Client","SleeperRb/Client.html#method-i-user","(username: nil, user_id: nil)","<p>Returns a user found by either username or user_id. Usernames are subject to change and are thus unstable. …\n"],["user","SleeperRb::Resources::Draft::Pick","SleeperRb/Resources/Draft/Pick.html#method-i-user","","<p>Returns the user instance to whom this pick belongs.\n<p>@return [SleeperRb::Resources::User]\n"],["users","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-users","","<p>Retrieves users for the League.\n<p>@return [SleeperRb::Resources::UserArray]\n"],["where","SleeperRb::Utilities::ArrayProxy","SleeperRb/Utilities/ArrayProxy.html#method-i-where","(options = {})",""],["win_pct","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-win_pct","()","<p>@return [Float] Percentage of games won by the roster\n"],["CHANGELOG","","CHANGELOG_md.html","","<p>[Unreleased]\n<p>[0.1.0] - 2021-09-02\n<p>Initial release\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>We as members, contributors, and leaders pledge to make …\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  sleeper_rb (0.1.0)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2021 Stephen Weil\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>SleeperRb\n<p><img src=\"https://badge.fury.io/rb/sleeper_rb.svg\">\n<img src=\"https://app.travis-ci.com/sjweil9/sleeper_rb.svg?branch=main\"> ...\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/gem_tasks” require “rspec/core/rake_task” …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["application.css","","coverage/assets/0_12_3/application_css.html","","<p>html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,code,del,dfn,em,img,q,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,dialog,figure,footer,header,hgroup,nav,section{margin:0;padding:0;border:0;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline}article,aside,dialog,figure,footer,header,hgroup,nav,section{display:block}body{line-height:1.5}table{border-collapse:separate;border-spacing:0}caption,th,td{text-align:left;font-weight:normal}table,td,th{vertical-align:middle}blockquote:before,blockquote:after,q:before,q:after{content:“”}blockquote,q{quotes:“” …\n"],["application.js","","coverage/assets/0_12_3/application_js.html","","<p>!function(e,t)“use strict”;“object”==typeof module&&“object”==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw …\n"],["index.html","","coverage/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html xmlns=&#39;www.w3.org/1999/xhtml&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;title&gt;Code coverage ...</pre>\n"],["draft_picks_response.json","","spec/fixtures/draft_picks_response_json.html","","<p>[\n\n<pre>{\n  &quot;round&quot;: 1,\n  &quot;roster_id&quot;: 8,\n  &quot;player_id&quot;: &quot;4034&quot;,\n  &quot;picked_by&quot;: &quot;469548265499521024&quot;,\n  &quot;pick_no&quot;: ...</pre>\n"],["draft_response.json","","spec/fixtures/draft_response_json.html","","<p>{\n\n<pre>&quot;type&quot;: &quot;auction&quot;,\n&quot;status&quot;: &quot;complete&quot;,\n&quot;start_time&quot;: 1630270952918,\n&quot;sport&quot;: &quot;nfl&quot;,\n&quot;slot_to_roster_id&quot;: ...</pre>\n"],["drafts_response.json","","spec/fixtures/drafts_response_json.html","","<p>[\n\n<pre>{\n  &quot;type&quot;: &quot;auction&quot;,\n  &quot;status&quot;: &quot;complete&quot;,\n  &quot;start_time&quot;: 1630270952918,\n  &quot;sport&quot;: &quot;nfl&quot;,\n  &quot;settings&quot;: ...</pre>\n"],["leagues_response.json","","spec/fixtures/leagues_response_json.html","","<p>[\n\n<pre>{\n  &quot;total_rosters&quot;: 8,\n  &quot;status&quot;: &quot;in_season&quot;,\n  &quot;sport&quot;: &quot;nfl&quot;,\n  &quot;shard&quot;: 630,\n  &quot;settings&quot;: {\n ...</pre>\n"],["matchups_response.json","","spec/fixtures/matchups_response_json.html","","<p>[\n\n<pre>{\n  &quot;starters_points&quot;: [\n    18.64,\n    19.4,\n    17.1,\n    5.9,\n    12.4,\n    25.6,\n    15.9,\n    0 ...</pre>\n"],["player_response.json","","spec/fixtures/player_response_json.html","","<p>{\n\n<pre>&quot;1&quot;: {\n    &quot;birth_country&quot;: null,\n    &quot;sport&quot;: &quot;nfl&quot;,\n    &quot;fantasy_positions&quot;: [\n        &quot;QB&quot;\n    ], ...</pre>\n"],["rosters_response.json","","spec/fixtures/rosters_response_json.html","","<p>[\n\n<pre>{\n  &quot;taxi&quot;: null,\n  &quot;starters&quot;: [\n    &quot;6770&quot;,\n    &quot;4029&quot;,\n    &quot;4098&quot;,\n    &quot;947&quot;,\n    &quot;1352&quot;,\n    &quot;1466&quot;, ...</pre>\n"],["traded_picks_response.json","","spec/fixtures/traded_picks_response_json.html","","<p>[\n\n<pre>{\n  &quot;season&quot;: &quot;2019&quot;,\n  &quot;round&quot;: 5,\n  &quot;roster_id&quot;: 1,\n  &quot;previous_owner_id&quot;: 1,\n  &quot;owner_id&quot;: 2\n},\n{ ...</pre>\n"],["user_response.json","","spec/fixtures/user_response_json.html","","<p>{\n\n<pre>&quot;verification&quot;: null,\n&quot;username&quot;: &quot;mindoflogic90&quot;,\n&quot;user_id&quot;: &quot;374409574377324544&quot;,\n&quot;token&quot;: null,\n&quot;summoner_region&quot;: ...</pre>\n"],["users_response.json","","spec/fixtures/users_response_json.html","","<p>[\n\n<pre>{\n  &quot;user_id&quot;: &quot;374409574377324544&quot;,\n  &quot;settings&quot;: null,\n  &quot;metadata&quot;: {\n    &quot;mention_pn&quot;: &quot;on&quot;,\n   ...</pre>\n"]]}}