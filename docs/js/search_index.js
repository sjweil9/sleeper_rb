var search_data = {"index":{"searchIndex":["object","sleeperrb","badrequest","client","notfound","ratelimitexceeded","resources","avatar","league","roster","settings","rosterposition","scoringsettings","settings","nflstate","player","user","servererror","utilities","cache","classmethods","request","all()","avatar()","cached_attr()","cached_attrs()","create_method()","find()","full_name()","half_ppr?()","included()","league()","leagues()","new()","new()","new()","new()","new()","new()","nfl_state()","owner()","player_hashes()","players()","ppr?()","record_string()","refresh()","refresh()","retrieve_players!()","rosters()","standard?()","total_points()","total_points_against()","user()","win_pct()","changelog","code_of_conduct","gemfile","gemfile.lock","license","readme","rakefile","setup","application.css","application.js","index.html"],"longSearchIndex":["object","sleeperrb","sleeperrb::badrequest","sleeperrb::client","sleeperrb::notfound","sleeperrb::ratelimitexceeded","sleeperrb::resources","sleeperrb::resources::avatar","sleeperrb::resources::league","sleeperrb::resources::league::roster","sleeperrb::resources::league::roster::settings","sleeperrb::resources::league::rosterposition","sleeperrb::resources::league::scoringsettings","sleeperrb::resources::league::settings","sleeperrb::resources::nflstate","sleeperrb::resources::player","sleeperrb::resources::user","sleeperrb::servererror","sleeperrb::utilities","sleeperrb::utilities::cache","sleeperrb::utilities::cache::classmethods","sleeperrb::utilities::request","sleeperrb::resources::player::all()","sleeperrb::client#avatar()","sleeperrb::utilities::cache::classmethods#cached_attr()","sleeperrb::utilities::cache::classmethods#cached_attrs()","sleeperrb::utilities::cache::classmethods#create_method()","sleeperrb::resources::player::find()","sleeperrb::resources::player#full_name()","sleeperrb::resources::league::scoringsettings#half_ppr?()","sleeperrb::utilities::cache::included()","sleeperrb::client#league()","sleeperrb::resources::user#leagues()","sleeperrb::resources::league::new()","sleeperrb::resources::league::rosterposition::new()","sleeperrb::resources::league::scoringsettings::new()","sleeperrb::resources::league::settings::new()","sleeperrb::resources::user::new()","sleeperrb::utilities::cache::new()","sleeperrb::client#nfl_state()","sleeperrb::resources::league::roster#owner()","sleeperrb::resources::player::player_hashes()","sleeperrb::client#players()","sleeperrb::resources::league::scoringsettings#ppr?()","sleeperrb::resources::league::roster::settings#record_string()","sleeperrb::resources::user#refresh()","sleeperrb::utilities::cache#refresh()","sleeperrb::resources::player::retrieve_players!()","sleeperrb::resources::league#rosters()","sleeperrb::resources::league::scoringsettings#standard?()","sleeperrb::resources::league::roster::settings#total_points()","sleeperrb::resources::league::roster::settings#total_points_against()","sleeperrb::client#user()","sleeperrb::resources::league::roster::settings#win_pct()","","","","","","","","","","",""],"info":[["Object","","Object.html","",""],["SleeperRb","","SleeperRb.html","",""],["SleeperRb::BadRequest","","SleeperRb/BadRequest.html","",""],["SleeperRb::Client","","SleeperRb/Client.html","","<p>A SleeperRb::Client instance is the interface for formulating all requests for Sleeper data.\n"],["SleeperRb::NotFound","","SleeperRb/NotFound.html","",""],["SleeperRb::RateLimitExceeded","","SleeperRb/RateLimitExceeded.html","",""],["SleeperRb::Resources","","SleeperRb/Resources.html","",""],["SleeperRb::Resources::Avatar","","SleeperRb/Resources/Avatar.html","","<p>The Avatar class allows access to full-size or thumbnail URLs for user avatars.\n"],["SleeperRb::Resources::League","","SleeperRb/Resources/League.html","","<p>This class represents a Fantasy Football League and is the access point for associated resources.\n"],["SleeperRb::Resources::League::Roster","","SleeperRb/Resources/League/Roster.html","","<p>A roster belonging to a specific user in a specific league.\n"],["SleeperRb::Resources::League::Roster::Settings","","SleeperRb/Resources/League/Roster/Settings.html","","<p>Settings for a specific roster in a league, including W/L/D, scoring_data, and waiver info.\n"],["SleeperRb::Resources::League::RosterPosition","","SleeperRb/Resources/League/RosterPosition.html","","<p>A string representing a roster position. See VALID_ROSTER_POSITIONS.\n"],["SleeperRb::Resources::League::ScoringSettings","","SleeperRb/Resources/League/ScoringSettings.html","","<p>Scoring settings for a League instance\n"],["SleeperRb::Resources::League::Settings","","SleeperRb/Resources/League/Settings.html","","<p>Non-scoring settings for a League instance\n"],["SleeperRb::Resources::NflState","","SleeperRb/Resources/NflState.html","","<p>The NflState resource represents the current state of the NFL (week number, year, etc) as defined by …\n"],["SleeperRb::Resources::Player","","SleeperRb/Resources/Player.html","",""],["SleeperRb::Resources::User","","SleeperRb/Resources/User.html","","<p>The User resource represents a single user in Sleeper. This also serves as the access points for associated …\n"],["SleeperRb::ServerError","","SleeperRb/ServerError.html","",""],["SleeperRb::Utilities","","SleeperRb/Utilities.html","",""],["SleeperRb::Utilities::Cache","","SleeperRb/Utilities/Cache.html","","<p>This module encapsulates the logic for caching and refreshing values retrieved from the Sleeper API. …\n"],["SleeperRb::Utilities::Cache::ClassMethods","","SleeperRb/Utilities/Cache/ClassMethods.html","","<p>Methods to be extended into the class when included.\n"],["SleeperRb::Utilities::Request","","SleeperRb/Utilities/Request.html","","<p>This module encapsulates the logic for handling the response when querying from the Sleeper API.\n"],["all","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-all","()","<p>Ensuring there is one source of players so the heavy endpoint need not be called frequently.\n<p>@return [Array&lt; …\n"],["avatar","SleeperRb::Client","SleeperRb/Client.html#method-i-avatar","(avatar_id)","<p>Returns an avatar found by the alphanumeric ID.\n<p>@param avatar_id [String] The ID for the avatar\n<p>@return …\n"],["cached_attr","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-cached_attr","(*attrs)","<p>Creates a memoized attribute reader for the named attributes.\n<p>Example\n<p>+cached_attr :display_name, :username, …\n"],["cached_attrs","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-cached_attrs","()",""],["create_method","SleeperRb::Utilities::Cache::ClassMethods","SleeperRb/Utilities/Cache/ClassMethods.html#method-i-create_method","(field_name, translator)",""],["find","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-find","(player_id)","<p>Retrieves a particular Player by ID.\n<p>@return [SleeperRb::Resources::Player] The Player instance\n"],["full_name","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-i-full_name","()","<p>@return [String] Combined first and last name\n"],["half_ppr?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-half_ppr-3F","()","<p>@return [Boolean] If league uses Half-PPR scoring\n"],["included","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-c-included","(base)",""],["league","SleeperRb::Client","SleeperRb/Client.html#method-i-league","(league_id)","<p>Returns a League found by the alphanumeric ID.\n<p>@param league_id [String] The ID for the League\n<p>@return …\n"],["leagues","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-leagues","(season)","<p>Retrieves leagues for the user for the given season.\n<p>@param season [String] The year in which the leagues …\n"],["new","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-c-new","(opts = {})",""],["new","SleeperRb::Resources::League::RosterPosition","SleeperRb/Resources/League/RosterPosition.html#method-c-new","(position)",""],["new","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-c-new","(opts)",""],["new","SleeperRb::Resources::League::Settings","SleeperRb/Resources/League/Settings.html#method-c-new","(opts)",""],["new","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-c-new","(opts)","<p>Initializes a user, with either username or user_id.\n<p>@param username [String] The current username\n<p>@param …\n"],["new","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-c-new","(opts = {})",""],["nfl_state","SleeperRb::Client","SleeperRb/Client.html#method-i-nfl_state","()","<p>Returns the current NflState.\n<p>@return SleeperRb::Resources::NflState The NflState instance\n"],["owner","SleeperRb::Resources::League::Roster","SleeperRb/Resources/League/Roster.html#method-i-owner","()","<p>@return [SleeperRb::Resources::User]\n"],["player_hashes","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-player_hashes","()",""],["players","SleeperRb::Client","SleeperRb/Client.html#method-i-players","()","<p>Returns all NFL players.\n<p>@return Array&lt;SleeperRb::Resources::Player&gt; Array of Player instances\n"],["ppr?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-ppr-3F","()","<p>@return [Boolean] If league uses PPR scoring\n"],["record_string","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-record_string","()","<p>@return [String] Record for the roster in W - L - T format\n"],["refresh","SleeperRb::Resources::User","SleeperRb/Resources/User.html#method-i-refresh","()","<p>Clears leagues for the user and returns itself.\n<p>@return [self]\n"],["refresh","SleeperRb::Utilities::Cache","SleeperRb/Utilities/Cache.html#method-i-refresh","()","<p>Refreshes all memoized values set by cached_attr.\n"],["retrieve_players!","SleeperRb::Resources::Player","SleeperRb/Resources/Player.html#method-c-retrieve_players-21","()",""],["rosters","SleeperRb::Resources::League","SleeperRb/Resources/League.html#method-i-rosters","()","<p>@return [Array&lt;SleeperRb::Resources::League::Roster&gt;]\n"],["standard?","SleeperRb::Resources::League::ScoringSettings","SleeperRb/Resources/League/ScoringSettings.html#method-i-standard-3F","()","<p>@return [Boolean] If league uses Standard (0 PPR) scoring\n"],["total_points","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-total_points","()","<p>@return [Float] All points scored by the roster\n"],["total_points_against","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-total_points_against","()","<p>@return [Float] All points scored against the roster\n"],["user","SleeperRb::Client","SleeperRb/Client.html#method-i-user","(username: nil, user_id: nil)","<p>Returns a user found by either username or user_id. Usernames are subject to change and are thus unstable. …\n"],["win_pct","SleeperRb::Resources::League::Roster::Settings","SleeperRb/Resources/League/Roster/Settings.html#method-i-win_pct","()","<p>@return [Float] Percentage of games won by the roster\n"],["CHANGELOG","","CHANGELOG_md.html","","<p>[Unreleased]\n<p>[0.1.0] - 2021-09-02\n<p>Initial release\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>We as members, contributors, and leaders pledge to make …\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  sleeper_rb (0.1.0)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2021 Stephen Weil\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>SleeperRb\n<p><img src=\"https://badge.fury.io/rb/sleeper_rb.svg\">\n<img src=\"https://app.travis-ci.com/sjweil9/sleeper_rb.svg?branch=main\"> ...\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/gem_tasks” require “rspec/core/rake_task” …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["application.css","","coverage/assets/0_12_3/application_css.html","","<p>html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,code,del,dfn,em,img,q,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,dialog,figure,footer,header,hgroup,nav,section{margin:0;padding:0;border:0;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline}article,aside,dialog,figure,footer,header,hgroup,nav,section{display:block}body{line-height:1.5}table{border-collapse:separate;border-spacing:0}caption,th,td{text-align:left;font-weight:normal}table,td,th{vertical-align:middle}blockquote:before,blockquote:after,q:before,q:after{content:“”}blockquote,q{quotes:“” …\n"],["application.js","","coverage/assets/0_12_3/application_js.html","","<p>!function(e,t)“use strict”;“object”==typeof module&&“object”==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw …\n"],["index.html","","coverage/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html xmlns=&#39;www.w3.org/1999/xhtml&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;title&gt;Code coverage ...</pre>\n"]]}}